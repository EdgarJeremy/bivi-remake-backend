{"version":3,"sources":["components/LoginForm.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["LoginForm","state","username","password","loading","onChange","ev","_this","setState","Object","defineProperty","target","name","value","login","preventDefault","_this$state","props","componentWillReceiveProps","react_default","a","createElement","Fragment","className","react_router_dom","to","style","maxWidth","disabled","this","type","placeholder","Alert","color","Spinner","onClick","Component","Login","_this$props","provider","check","set","then","catch","e","alert","response","data","errors","msg","document","title","react_router","LoginForm_LoginForm","assign","Dashboard","lazy","Promise","all","__webpack_require__","bind","MainPage","Check","Register","config","process","Adapter","SiriusAdapter","REACT_APP_IP_ADDRESS","REACT_APP_PORT","io","socket","concat","App","ready","models","error","user","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","connect","sent","getAuthProvider","get","t0","stop","_this2","console","log","react","fallback","App_Loading","path","exact","render","p","Login_Login","Loading","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.bd709989.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Alert, Spinner} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    loading : false\n  };\n\n  onChange = ev => {\n    this.setState({ [ev.target.name]: ev.target.value });\n  }\n\n  login = ev => {\n    ev.preventDefault();\n    const { username, password } = this.state;\n    this.props.login(username, password);\n  }\n\n  componentWillReceiveProps = props => {\n    const {loading} = props;\n    this.setState({ loading });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"bg-half animated slideInDown fast\" />\n        <Link className=\"login-btn\" to=\"/\">Home</Link>\n        <div className=\"wrapper d-flex justify-content-center align-items-center\">\n          <div style={{ maxWidth: 600 }} className=\"container\">\n            <div className=\"card border-0 shadow\">\n              <div className=\"card-body\">\n                <h3 className=\"mb-2\">Login</h3>\n                <form className=\"form-group\">\n                  <input disabled={this.state.loading} type=\"text\" onChange={this.onChange} name=\"username\" value={this.state.username} placeholder=\"Username\" className=\"form-control form-control-lg rounded-pill my-3\" />\n                  <input disabled={this.state.loading} type=\"password\" onChange={this.onChange} name=\"password\" value={this.state.password} placeholder=\"Password\" className=\"form-control form-control-lg rounded-pill my-3\" />\n                  <hr />\n                  { this.state.loading &&\n                    <>\n                        <Alert color=\"success\"><h5 className=\"m-0\"><Spinner color=\"dark\"/>&nbsp;Loading</h5></Alert>\n                        <hr />\n                    </>\n                  }\n                  <button type=\"submit\" onClick={this.login} className=\"btn btn-outline-success btn-block rounded-pill btn-lg\">Login</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport LoginForm from '../components/LoginForm';\nimport { Redirect } from 'react-router-dom'\n\nexport default class Login extends Component {\n  state = {\n    login: false,\n    loading: false\n  }\n\n  // check = () => {\n  //   const {provider} = this.props;\n  //   provider.get().then(() => {\n  //     this.setState({ login : true })\n  //   }).catch(() => this.setState({ login : false }))\n  // }\n\n  componentDidMount() {\n    const { login } = this.props;\n    this.setState({ login });\n    // this.check();\n  }\n\n  componentWillReceiveProps = props => {\n    const { login } = props;\n    this.setState({ login });\n  }\n\n  login = (username, password) => {\n    const { provider, check } = this.props;\n    provider.set({ username, password }).then(() => {\n      this.setState({ login: true }, () => check())\n    }).catch(e => alert(e.response.data.errors[0].msg))\n  };\n\n  render() {\n    document.title = \"Login ke Dashboard\"\n    if (this.props.login) return <Redirect to=\"/dashboard/main\" />\n    return (\n      <>\n        <LoginForm {...this.props} loading={this.state.loading} login={this.login} />\n      </>\n    )\n  }\n}\n","import React, { Component, Suspense, lazy } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport SiriusAdapter from '@edgarjeremy/sirius.adapter';\nimport socket from 'socket.io-client';\nimport './styles/main.scss';\nimport Login from './pages/Login';\nconst Dashboard = lazy(() => import('./pages/Dashboard'));\nconst MainPage = lazy(() => import('./pages/MainPage'));\nconst Check = lazy(() => import('./pages/Check'));\nconst Register = lazy(() => import('./pages/Register'));\n\n// const Adapter = new SiriusAdapter('https://biviapis.herokuapp.com', 80);\nconst config = process.env\nconst Adapter = new SiriusAdapter(config.REACT_APP_IP_ADDRESS, config.REACT_APP_PORT);\nconst io = socket(`${config.REACT_APP_IP_ADDRESS}:${config.REACT_APP_PORT}`)\n\nclass App extends Component {\n  state = {\n    ready: false,\n    models: {},\n    provider: {},\n    error: false,\n    user: { type: '...', name: 'Loading' },\n    login: false\n  };\n\n  componentDidMount = async () => {\n    try {\n      const models = await Adapter.connect()\n      const provider = await Adapter.getAuthProvider()\n      provider.get().then(user => {\n        this.setState({ models, provider, ready: true, user, login: true })\n      }).catch(() => this.setState({ login: false, ready : true, models, provider, }))\n    } catch (error) {\n      alert(\"Error\");\n    }\n  }\n\n  check = () => {\n    const { provider } = this.state;\n    provider.get().then(user => {\n      this.setState({ ready: true, user, login: true })\n    }).catch(() => this.setState({ login: false, ready : true }))\n  }\n\n\n  render() {\n    console.log(config.REACT_APP_IP_ADDRESS)\n    return (\n      // <>\n      !this.state.ready ? <Loading msg=\"Mempersiapkan\" /> :\n        <Suspense fallback={<Loading msg=\"Mempersiapkan\" />}>\n          <Router>\n            <Route path=\"/\" exact render={(p) => (<MainPage {...p} user={this.state.user} />)} />\n            <Route path=\"/cek\" exact render={p => (<Check {...p} models={this.state.models} />)} />\n            <Route path=\"/register\" render={p => <Register models={this.state.models} {...p} />} />\n            <Route path=\"/dashboard\" render={(p) => (<Dashboard provider={this.state.provider} check={this.check} user={this.state.user} login={this.state.login} models={this.state.models} socket={io} {...p} />)} />\n            <Route path=\"/login\" render={(p) => (<Login provider={this.state.provider} check={this.check} user={this.state.user} login={this.state.login} {...p} />)} />\n          </Router>\n        </Suspense>\n      // </>\n    );\n  }\n}\n\nconst Loading = props => (<div className=\"container vh-100 flex-column d-flex justify-content-center align-items-center\">\n  <div className=\"spinner-border text-success\" />\n  <h4>{props.msg}</h4>\n</div>)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}