{"version":3,"sources":["components/LoginForm.js","pages/Login.js","pages/QueueLists.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["LoginForm","state","username","password","loading","error","onChange","ev","_this","setState","Object","defineProperty","target","name","value","login","preventDefault","_this$state","props","componentWillReceiveProps","_dissmissError","this","react_default","a","createElement","Fragment","className","react_router_dom","to","style","maxWidth","disabled","type","placeholder","concat","Alert","size","color","Spinner","isOpen","toggle","onClick","Component","Login","_this$props","provider","check","set","then","catch","e","console","log","document","title","react_router","LoginForm_LoginForm","assign","QueueLists","queues","count","rows","componentDidMount","socket","moment","locale","getQueues","on","arguments","length","undefined","Queue","models","collection","limit","offset","where","date","Date","format","called","orderBy","include","model","attributes","_","sortBy","time","Card","height","Table","bordered","striped","colSpan","getElementsByTagName","map","row","i","QueueLists_Tr","index","Tr","toUpperCase","nik","queue_number","purpose","Dashboard","lazy","Promise","all","__webpack_require__","bind","MainPage","Check","Register","config","process","Adapter","SiriusAdapter","REACT_APP_IP_ADDRESS","REACT_APP_PORT","localStorage","io","App","ready","user","dark","_callee","regenerator_default","wrap","_context","prev","next","connect","sent","getAuthProvider","loadReCaptcha","get","t0","addEventListener","ctrlKey","altKey","key","getItem","setItem","stop","_this2","App_ErrorMsg","react","fallback","App_Loading","msg","path","exact","render","p","Login_Login","QueueLists_QueueLists","Loading","src","logo","alt","ErrorMsg","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7ccb33ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Alert, Spinner} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    loading : false,\n    error : false\n  };\n\n  onChange = ev => {\n    this.setState({ [ev.target.name]: ev.target.value });\n  }\n\n  login = ev => {\n    ev.preventDefault();\n    const { username, password } = this.state;\n    this.props.login(username, password);\n  }\n\n  componentWillReceiveProps = props => {\n    const {loading, error} = props;\n    this.setState({ loading, error });\n  }\n\n  _dissmissError = () => {\n    this.setState({ error : false });\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <>\n        <div className=\"bg-half animated slideInDown fast\" />\n        <Link className=\"login-btn\" to=\"/\">Home</Link>\n        <div className=\"wrapper d-flex justify-content-center align-items-center\">\n          <div style={{ maxWidth: 600 }} className=\"container\">\n            <div className=\"card border-0 shadow\">\n              <div className=\"card-body\">\n                <h3 className=\"mb-2\">Login</h3>\n                <form className=\"form-group\">\n                  <input disabled={this.state.loading} type=\"text\" onChange={this.onChange} name=\"username\" value={this.state.username} placeholder=\"Username\" className={`form-control ${error ? 'is-invalid' : ''} rounded-pill my-2`} />\n                  <input disabled={this.state.loading} type=\"password\" onChange={this.onChange} name=\"password\" value={this.state.password} placeholder=\"Password\" className={`form-control ${error ? 'is-invalid' : ''} rounded-pill my-2`} />\n                  <hr />\n                  { this.state.loading &&\n                    <>\n                        <Alert size=\"sm\" color=\"success\"><Spinner size=\"sm\" color=\"success\"/>&nbsp;Loading</Alert>\n                        <hr />\n                    </>\n                  }\n                  <Alert isOpen={error} color=\"danger\" toggle={this._dissmissError}>Login tidak valid</Alert>\n                  <button type=\"submit\" onClick={this.login} className=\"btn btn-outline-success rounded-pill btn-block\">Login</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport LoginForm from '../components/LoginForm';\nimport { Redirect } from 'react-router-dom'\n\nexport default class Login extends Component {\n  state = {\n    login: false,\n    loading: false,\n    error : false\n  }\n\n  componentDidMount() {\n    const { login } = this.props;\n    this.setState({ login });\n  }\n\n  componentWillReceiveProps = props => {\n    const { login } = props;\n    this.setState({ login });\n  }\n\n  login = (username, password) => {\n    this.setState({ loading : true, error : false });\n    const { provider, check } = this.props;\n    provider.set({ username, password }).then(() => {\n      this.setState({ login: true, loading : false }, () => check())\n    }).catch(e => {\n      this.setState({ error : true, loading : false });\n      console.log(e)\n    })\n  };\n\n  render() {\n    document.title = \"Login ke Dashboard\"\n    if (this.props.login) return <Redirect to=\"/dashboard/main\" />\n    return (\n      <>\n        <LoginForm {...this.props} error={this.state.error} loading={this.state.loading} login={this.login} />\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {Card, Table, Spinner} from 'reactstrap';\nimport moment from 'moment';\nimport 'moment/locale/id'\nimport _ from 'lodash'\n\nexport default class QueueLists extends Component {\n  state = {\n    queues : {\n      count : 1,\n      rows : []\n    },\n    loading : false,\n  }\n\n  componentDidMount = () => {\n    const {socket} = this.props;\n    moment.locale('id');\n    this.getQueues(true);\n    socket.on('UPDATE_LIST', () => this.getQueues(false));\n    socket.on('NEW_QUEUE', () => this.getQueues(false));\n    socket.on('QUEUE_CALLED', () => this.getQueues(false));\n    socket.on('QUEUE_ARRIVED', () => this.getQueues(false));\n  };\n  \n  getQueues = (loading = false) => {\n    const {models : { Queue }} = this.props;\n    if (loading) this.setState({ loading : true });\n    Queue.collection({ limit :  25, offset : 0, where : { date :  moment(new Date()).format('YYYY-MM-DD'), called : 0}, orderBy : [['time', 'asc'], ['id', 'asc']] ,include : [{\n      model : 'Purpose',\n      attributes : ['id', 'name']\n    }] }).then(queues => {\n      queues.rows = _.sortBy(queues.rows, e => e.time)\n      this.setState({ queues, loading : false })\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"bg-half\" />\n        <div className=\"wrapper p-3\">\n          <Card style={{ height: '100%' }} className=\"border-0 shadow overflow-scroll\">\n            <div className=\"p-3\">\n              <h3 className=\"m-0 text-center\">Pengantri</h3>\n              <h5 className=\"m-0 text-center\">Hari {moment().format('dddd, DD MMMM YYYY')}</h5>\n              <p className=\"m-0 text-center\">Jumlah pengantri : {this.state.queues.count}</p>\n            </div>\n            <Table bordered striped>\n              <thead>\n                <tr>\n                  <th>No</th>\n                  <th>Nama</th>\n                  <th>NIK</th>\n                  <th>Nomor Pengantri</th>\n                  <th>Jam</th>\n                  <th>Tujuan</th>\n                </tr>\n              </thead>\n              <tbody>\n                { this.state.loading &&\n                  <tr>\n                    <td colSpan={document.getElementsByTagName('th').length}>\n                      <h4 className=\"m-0 text-center\"><Spinner size=\"sm\" />&nbsp;Loading</h4>\n                    </td>\n                  </tr>\n                }\n                { !this.state.loading && this.state.queues.rows.map((row, i) => (<Tr index={i + 1} {...row} />)) }\n                { !this.state.loading && this.state.queues.rows.length === 0 &&\n                  <tr>\n                    <td colSpan={document.getElementsByTagName('th').length}>\n                      <h4 className=\"m-0 text-center\">Tidak ada antrian</h4>\n                    </td>\n                  </tr>\n                }\n              </tbody>\n            </Table>\n          </Card>\n        </div>\n      </>\n    )\n  }\n}\n\nconst Tr = props => (\n  <tr>\n    <td>{props.index}</td>\n    <td>{props.name.toUpperCase()}</td>\n    <td>{props.nik}</td>\n    <td>{props.queue_number}</td>\n    <td>{props.time}</td>\n    <td>{props.purpose.name}</td>\n  </tr>\n)","import React, { Component, Suspense, lazy } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport SiriusAdapter from '@edgarjeremy/sirius.adapter';\nimport socket from 'socket.io-client';\nimport { loadReCaptcha } from 'react-recaptcha-v3'\nimport Login from './pages/Login';\nimport QueueLists from './pages/QueueLists';\nimport './styles/main.scss';\nimport logo from './logo.png'\nconst Dashboard = lazy(() => import('./pages/Dashboard'));\nconst MainPage = lazy(() => import('./pages/MainPage'));\nconst Check = lazy(() => import('./pages/Check'));\nconst Register = lazy(() => import('./pages/Register'));\n\nconst config = process.env\nconst Adapter = new SiriusAdapter(config.REACT_APP_IP_ADDRESS, config.REACT_APP_PORT, localStorage);\nconst io = socket(`${config.REACT_APP_IP_ADDRESS}:${config.REACT_APP_PORT}`)\n\nclass App extends Component {\n  state = {\n    ready: false,\n    models: {},\n    provider: {},\n    error: false,\n    user: { type: '...', name: 'Loading' },\n    login: false,\n    dark: false\n  };\n\n  componentDidMount = async () => {\n    try {\n      const models = await Adapter.connect()\n      const provider = await Adapter.getAuthProvider()\n      loadReCaptcha('6Lc259UUAAAAANmApCOJJboq3_AeAYTZiJqg5M6W');\n      provider.get().then(user => {\n        this.setState({ models, provider, ready: true, user, login: true })\n      }).catch(() => this.setState({ login: false, ready: true, models, provider, }))\n    } catch (e) {\n      console.log(e)\n      this.setState({ error: true, ready: true });\n    }\n    document.addEventListener(\"keydown\", e => {\n      if (e.ctrlKey && e.altKey && e.key === '∂') {\n        console.log(localStorage.getItem('dark') === 'true')\n        if (localStorage.getItem('dark') === 'true') {\n          localStorage.setItem(\"dark\", 'false');\n          this.setState({ dark: false })\n        } else if (localStorage.getItem('dark') === 'false') {\n          localStorage.setItem(\"dark\", 'true');\n          this.setState({ dark: true })\n        } else {\n          localStorage.setItem(\"dark\", 'true');\n          this.setState({ dark: true })\n        }\n        // if (typeof localStorage.getItem(\"dark\") !== 'null') {\n        // } else {\n        //   console.log('t')\n        // }\n      }\n    })\n    const dark = localStorage.getItem('dark');\n    if (dark === 'true') {\n      this.setState({ dark: true })\n    } else if (dark === 'false') {\n      this.setState({ dark: false })\n    }\n    console.log(localStorage.getItem('dark'));\n  }\n\n  check = () => {\n    const { provider } = this.state;\n    provider.get().then(user => {\n      this.setState({ ready: true, user, login: true })\n    }).catch(() => this.setState({ login: false, ready: true }))\n  }\n\n\n  render() {\n    if (this.state.error) return (<ErrorMsg />)\n    return (\n      // <>\n      !this.state.ready ? <Loading msg=\"Loading\" /> :\n        <Suspense fallback={<Loading msg=\"Tunggu Sebentar\" />}>\n          <Router>\n            <Route path=\"/\" exact render={(p) => (<MainPage {...p} dark={this.state.dark} user={this.state.user} />)} />\n            <Route path=\"/cek\" exact render={p => (<Check {...p} models={this.state.models} />)} />\n            <Route path=\"/register\" render={p => <Register models={this.state.models} {...p} />} />\n            <Route path=\"/dashboard\" render={(p) => (<Dashboard provider={this.state.provider} check={this.check} user={this.state.user} login={this.state.login} models={this.state.models} socket={io} {...p} />)} />\n            <Route path=\"/login\" render={(p) => (<Login provider={this.state.provider} check={this.check} user={this.state.user} login={this.state.login} {...p} />)} />\n            <Route path=\"/list\" render={p => (<QueueLists models={this.state.models} socket={io} {...p} />)} />\n          </Router>\n        </Suspense>\n      // </>\n    );\n  }\n}\n\nconst Loading = props => (<div className=\"container-fluid bg-loading vh-100 flex-column d-flex justify-content-center align-items-center\">\n  <div className=\"w-25 my-3\">\n    <img src={logo} className=\"mdo-logo d-block m-auto\" alt=\"\" />\n  </div>\n  <h4 className=\"text-white my-3\">{props.msg}</h4>\n  <div className=\"spinner-border text-white\" />\n</div>)\n\nconst ErrorMsg = () => (\n  <div className=\"container-fluid bg-loading vh-100 flex-column d-flex justify-content-center align-items-center\">\n    <div className=\"w-25 my-3\">\n      <img src={logo} className=\"mdo-logo d-block m-auto\" alt=\"\" />\n    </div>\n    <h4 className=\"text-white\">Terjadi Kesalahan</h4>\n    <p className=\"text-white m-0\">Silakan reload (muat ulang) halaman ini</p>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5e5e6ae2.png\";"],"sourceRoot":""}